name: Terraform CI

on:
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  terraform-ci:
    name: Terraform Validate and Format
    runs-on: ubuntu-latest

    steps:

      # Display the event that triggered the workflow
      - run: echo "The job was triggered by a ${{ github.event_name }} event."

       # Information about the repository and branch
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.1

       # Save all directories containing terraform files in a variable
      - name: Find Directories
        id: find_dirs
        run: |
          tfDIRS=$(find . -name '*.tf' -exec dirname {} \; | sort -u)
          for dir in $tfDIRS; do
            echo "Found Terraform files in directory: $dir"
          done
          {
            echo 'tfDIRS<<EOF'
            echo "$tfDIRS"
            echo EOF
          } >> "$GITHUB_ENV"

      - name: Terraform Init
        run: |
          tfDIRS="${{ env.tfDIRS }}"
          for dir in $tfDIRS; do
            echo "Initializing Terraform in directory: $dir"
            if [[ "$dir" == *"webapp"* ]]; then
              echo "hola"
              # (cd "$dir" && terraform init -backend-config="state.backend.conf" -reconfigure")
            else
              (cd "$dir" && terraform init)
            fi
          done

      - name: Terraform Format
        run: |
          tfDIRS="${{ env.tfDIRS }}"
          for dir in $tfDIRS; do
            echo "Running terraform fmt in directory: $dir"
            (cd "$dir" && terraform fmt)
          done

      - name: Terraform Validate
        run: |
          tfDIRS="${{ env.tfDIRS }}"
          for dir in $tfDIRS; do
            echo "Running terraform validate in directory: $dir"
            (cd "$dir" && terraform validate)
          done
