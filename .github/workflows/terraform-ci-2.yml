name: Terraform CI-2

on:
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

permissions:
      id-token: write
      contents: read

jobs:

  checkout-and-setup:
    name: Checkout and Setup
    runs-on: ubuntu-latest

    steps:

      # Display the event that triggered the workflow
      - run: echo "The job was triggered by a ${{ github.event_name }} event."

       # Information about the repository and branch
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.1


  job-test:

    name: test
    runs-on: ubuntu-latst

    steps:

      - id: hola
        run: echo "hola"


  # Save all directories containing terraform files in a variable
  # find-tf-directories:
  #   name: Find Terraform Directories
  #   runs-on: ubuntu-latest
  #   needs: checkout-and-setup

  #   steps:
  #     - id: find_dirs
  #       run: |
  #         tfDIRS=$(find . -name '*.tf' -exec dirname {} \; | sort -u)
  #         for dir in $tfDIRS; do
  #           echo "Found Terraform files in directory: $dir"
  #         done
  #         {
  #           echo 'tfDIRS<<EOF'
  #           echo "$tfDIRS"
  #           echo EOF
  #         } >> "$GITHUB_OUTPUT"

      
  # # Terraform initialization ignoring backend.tf
  # init-terraform:
  #   name: Initialize Terraform
  #   runs-on: ubuntu-latest
  #   needs: find-tf-directories

  #   steps:
  #     - name: Terraform Init
  #       run: |
  #         tfDIRS="${{ needs.secret-generator.outputs.tfDIRS }}"
  #         for dir in $tfDIRS; do
  #           (cd "$dir" &&
  #           echo "Initializing Terraform in directory: $dir" &&
  #           terraform init -backend=false)
  #         done

      # - name: Terraform Format Check
      #   run: |
      #     tfDIRS="${{ env.tfDIRS }}"
      #     for dir in $tfDIRS; do
      #       echo "Running terraform fmt in directory: $dir"
      #       (cd "$dir" && terraform fmt)
      #     done

      # - name: Terraform Validate
      #   run: |
      #     tfDIRS="${{ env.tfDIRS }}"
      #     for dir in $tfDIRS; do
      #       echo "Running terraform validate in directory: $dir"
      #       (cd "$dir" && terraform validate)
      #     done
